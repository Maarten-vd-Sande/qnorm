name: continuous-deployment

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build pytest
      - name: Run tests
        run: python -m pytest

  publish-testpypi:
    name: Publish to Test PyPI
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools_scm build twine
      - name: Build package
        run: python -m build
      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.QNORM_PYPI_TEST }}
          verbose: true

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_type == 'tag' && startsWith(github.ref_name, 'v') }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools_scm build twine
      - name: Build package
        run: python -m build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.QNORM_PYPI }}
          verbose: true
